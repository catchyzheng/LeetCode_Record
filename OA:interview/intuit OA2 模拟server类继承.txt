http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=444213&highlight=intuit%2BOA

class Solution(object):
    def smallestRangeII(self, A, K):
    #def parseConfiguration(lines):
        input1 = "[staging:base]\nram = 8G\nenvname = Staging\n\n[dev:staging]\nenvname = Dev\n\n"
        input2 = "[test:dev]\ndisk = 4G\n\n[base]\nram = 16G\ndisk = 15G\n\n[qa:base]\nram = 4G"
        
        input = input1 + input2
        lines = input.split('\n')
        section = {}
        child = collections.defaultdict()
        indegree = collections.defaultdict(int)
        last = "00"
        
        def dfs(node):
            print node
            print "length of child[node]: ", len(child[node])
            for son in child[node]:
                print "son of node: ", son
                for key in section[node]:
                    #print "key in section node: ", key
                    if key not in section[son]:
                        #if node == "base" and son == "staging":
                            #print "section[son]", son, "section[node]", node, key
                        section[son][key] = section[node][key]
                dfs(son)
                print "son returned", son
            
        for line in lines:
            if line and line[0] == '[':
                line = line[1:len(line)-1]
                list = line.split(':')
                if list[0] not in child: 
                    child[list[0]] = []
                    indegree[list[0]] = 0
                if len(list) > 1:
                    print line, line, line
                    if list[1] not in child:
                        child[list[1]] = []
                        indegree[list[1]] = 0
                    print list[0], list[1]
                    child[list[1]].append(list[0]) # list0 is list1 children
                    indegree[list[0]] += 1
                    
                if list[0] not in section:
                    section[list[0]] = collections.defaultdict(str)
                last = list[0]
            else:
                ele = line.split(' = ')
                if len(ele) > 1 and ele[0] not in section[last]:
                    section[last][ele[0]] = ele[1]
        
        for node in child:
            #print "indegree of node: ", node, " is ", indegree[node]
            if indegree[node] == 0:
                #print node, "degree is 0"
                dfs(node)

        
        section_keys = sorted(section.keys()) # this is a list
        
        for member in section_keys:
            print '[' + member + ']'
            member_keys = sorted(section[member].keys())
            for key in member_keys:
                print key + " = " + section[member][key]
            print ""
        
        return 0
                        