int to char: (char)(num+'0')
char to int: c-'0'
字符串长度 s.length() 数组长度nums.length

数组操作
List<List<Integer>> ans = new ArrayList<>();
当ans，list都是全局变量，ans.add(new ArrayList<>(list)) 快速拷贝。学到了。

int[][] memo = new int[nums.length][2001];
for (int[] row: memo)
   Arrays.fill(row, Integer.MIN_VALUE);

Stack<Integer> st = new Stack<Integer>()
boolean empty() 
Object peek( )
Object pop( )
Object push(Object element)
int search(Object element) 返回对象在堆栈中的位置，以 1 为基数。

Map<Integer, Integer> map = new HashMap<>();
map.getOrDefault(key,0) //
map.put(key, value) 
for(int key: map.keySet())

List<Integer> list = new ArrayList<>()
list.size()
list.add(num) // 添加元素
list.get(i) // 下标访问
list.toArray(strArray); //把链表变为数组相关的内容进行遍历

Queue<Integer> q = new LinkedList<>()
q.poll() //弹出首部元素，取出值。
q.offer() //添加元素
peek() //取出首值，不弹出。

Deque<Integer> mDeque = new ArrayDeque<Integer>();
相比queue，就是在每个操作后面可以加上First或者Last。

